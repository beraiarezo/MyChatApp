/**
 *
 *  RestfulGroupsCtrl.h
 *  This file is generated by drogon_ctl
 *
 */

#pragma once

#include <drogon/HttpController.h>
#include "RestfulGroupsCtrlBase.h"

#include "Groups.h"
using namespace drogon;
using namespace drogon_model::chat;
/**
 * @brief this class is created by the drogon_ctl command.
 * this class is a restful API controller for reading and writing the groups table.
 */

class RestfulGroupsCtrl: public drogon::HttpController<RestfulGroupsCtrl>, public RestfulGroupsCtrlBase
{
  public:
    METHOD_LIST_BEGIN
    ADD_METHOD_TO(RestfulGroupsCtrl::getOne,"/groups/{1}",Get,Options);
    ADD_METHOD_TO(RestfulGroupsCtrl::updateOne,"/groups/{1}",Put,Options);
    ADD_METHOD_TO(RestfulGroupsCtrl::deleteOne,"/groups/{1}",Delete,Options);
    ADD_METHOD_TO(RestfulGroupsCtrl::get,"/groups",Get,Options);
    ADD_METHOD_TO(RestfulGroupsCtrl::create,"/groups",Post,Options);
    //ADD_METHOD_TO(RestfulGroupsCtrl::update,"/groups",Put,Options);
    METHOD_LIST_END
     
    void getOne(const HttpRequestPtr &req,
                std::function<void(const HttpResponsePtr &)> &&callback,
                Groups::PrimaryKeyType &&id);
    void updateOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   Groups::PrimaryKeyType &&id);
    void deleteOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   Groups::PrimaryKeyType &&id);
    void get(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);
    void create(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);

};
